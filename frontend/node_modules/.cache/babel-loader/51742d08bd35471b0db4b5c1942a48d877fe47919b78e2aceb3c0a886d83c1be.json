{"ast":null,"code":"var _jsxFileName = \"D:\\\\cherisables-II\\\\frontend\\\\src\\\\components\\\\Carousel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/carousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carousel = () => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // Array of 7 card data with images required directly\n  const cards = [{\n    id: 1,\n    image: require(\"../productimages/P2.jpg\"),\n    title: \"Memory One\"\n  }, {\n    id: 2,\n    image: require(\"../productimages/P3.jpg\"),\n    title: \"Memory Two\"\n  }, {\n    id: 3,\n    image: require(\"../productimages/P4.jpg\"),\n    title: \"Memory Three\"\n  }, {\n    id: 4,\n    image: require(\"../productimages/P5.jpg\"),\n    title: \"Memory Four\"\n  }, {\n    id: 5,\n    image: require(\"../productimages/P2.jpg\"),\n    title: \"Memory Five\"\n  }, {\n    id: 6,\n    image: require(\"../productimages/P3.jpg\"),\n    title: \"Memory Six\"\n  }, {\n    id: 7,\n    image: require(\"../productimages/P4.jpg\"),\n    title: \"Memory Seven\"\n  }];\n  useEffect(() => {\n    const slideInterval = setInterval(() => {\n      setCurrentSlide(prevSlide => prevSlide === cards.length - 1 ? 0 : prevSlide + 1);\n    }, 3000); // Changes slide every 3 seconds\n\n    return () => clearInterval(slideInterval);\n  }, [cards.length]);\n\n  // Calculate visible cards based on currentSlide, wrapping around if needed\n  const visibleCards = [...cards.slice(currentSlide, currentSlide + 5), ...(currentSlide + 5 > cards.length ? cards.slice(0, (currentSlide + 5) % cards.length) : [])];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel\",\n      children: visibleCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `carousel-card ${index === 0 ? \"slide-in\" : \"slide-forward\"}`,\n        style: {\n          backgroundImage: `url(${card.image})`\n        }\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"/jm+XmndjAYlDCFyCnfFEXJOloU=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Carousel","_s","currentSlide","setCurrentSlide","cards","id","image","require","title","slideInterval","setInterval","prevSlide","length","clearInterval","visibleCards","slice","className","children","map","card","index","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/cherisables-II/frontend/src/components/Carousel.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/carousel.css\";\r\n\r\nconst Carousel: React.FC = () => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  // Array of 7 card data with images required directly\r\n  const cards = [\r\n    { id: 1, image: require(\"../productimages/P2.jpg\"), title: \"Memory One\" },\r\n    { id: 2, image: require(\"../productimages/P3.jpg\"), title: \"Memory Two\" },\r\n    { id: 3, image: require(\"../productimages/P4.jpg\"), title: \"Memory Three\" },\r\n    { id: 4, image: require(\"../productimages/P5.jpg\"), title: \"Memory Four\" },\r\n    { id: 5, image: require(\"../productimages/P2.jpg\"), title: \"Memory Five\" },\r\n    { id: 6, image: require(\"../productimages/P3.jpg\"), title: \"Memory Six\" },\r\n    { id: 7, image: require(\"../productimages/P4.jpg\"), title: \"Memory Seven\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const slideInterval = setInterval(() => {\r\n      setCurrentSlide((prevSlide) =>\r\n        prevSlide === cards.length - 1 ? 0 : prevSlide + 1\r\n      );\r\n    }, 3000); // Changes slide every 3 seconds\r\n\r\n    return () => clearInterval(slideInterval);\r\n  }, [cards.length]);\r\n\r\n  // Calculate visible cards based on currentSlide, wrapping around if needed\r\n  const visibleCards = [\r\n    ...cards.slice(currentSlide, currentSlide + 5),\r\n    ...(currentSlide + 5 > cards.length\r\n      ? cards.slice(0, (currentSlide + 5) % cards.length)\r\n      : []),\r\n  ];\r\n\r\n  return (\r\n    <div className=\"carousel-container\">\r\n      <div className=\"carousel\">\r\n        {visibleCards.map((card, index) => (\r\n          <div\r\n            key={card.id}\r\n            className={`carousel-card ${\r\n              index === 0 ? \"slide-in\" : \"slide-forward\"\r\n            }`}\r\n            style={{\r\n              backgroundImage: `url(${card.image})`,\r\n            }}\r\n          >\r\n            {/* Commenting out the title for now */}\r\n            {/* <p className=\"carousel-title\">{card.title}</p> */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}